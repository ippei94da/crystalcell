#! /usr/bin/ruby

require "helper"

class TC_Element < Test::Unit::TestCase
    def setup
        @e = CrystalCell::Element.new
    end

    def test_atomicNumber
        assert_equal(  1, @e.atomic_number( 'H'  ))
        assert_equal(  2, @e.atomic_number( 'He' ))
        assert_equal(  3, @e.atomic_number( 'Li' ))
        assert_equal(  4, @e.atomic_number( 'Be' ))
        assert_equal(  5, @e.atomic_number( 'B'  ))
        assert_equal(  6, @e.atomic_number( 'C'  ))
        assert_equal(  7, @e.atomic_number( 'N'  ))
        assert_equal(  8, @e.atomic_number( 'O'  ))
        assert_equal(  9, @e.atomic_number( 'F'  ))
        assert_equal( 10, @e.atomic_number( 'Ne' ))
        assert_equal( 11, @e.atomic_number( 'Na' ))
        assert_equal( 12, @e.atomic_number( 'Mg' ))
        assert_equal( 13, @e.atomic_number( 'Al' ))
        assert_equal( 14, @e.atomic_number( 'Si' ))
        assert_equal( 15, @e.atomic_number( 'P'  ))
        assert_equal( 16, @e.atomic_number( 'S'  ))
        assert_equal( 17, @e.atomic_number( 'Cl' ))
        assert_equal( 18, @e.atomic_number( 'Ar' ))
        assert_equal( 19, @e.atomic_number( 'K'  ))
        assert_equal( 20, @e.atomic_number( 'Ca' ))
        assert_equal( 21, @e.atomic_number( 'Sc' ))
        assert_equal( 22, @e.atomic_number( 'Ti' ))
        assert_equal( 23, @e.atomic_number( 'V'  ))
        assert_equal( 24, @e.atomic_number( 'Cr' ))
        assert_equal( 25, @e.atomic_number( 'Mn' ))
        assert_equal( 26, @e.atomic_number( 'Fe' ))
        assert_equal( 27, @e.atomic_number( 'Co' ))
        assert_equal( 28, @e.atomic_number( 'Ni' ))
        assert_equal( 29, @e.atomic_number( 'Cu' ))
        assert_equal( 30, @e.atomic_number( 'Zn' ))
        assert_equal( 31, @e.atomic_number( 'Ga' ))
        assert_equal( 32, @e.atomic_number( 'Ge' ))
        assert_equal( 33, @e.atomic_number( 'As' ))
        assert_equal( 34, @e.atomic_number( 'Se' ))
        assert_equal( 35, @e.atomic_number( 'Br' ))
        assert_equal( 36, @e.atomic_number( 'Kr' ))
        assert_equal( 37, @e.atomic_number( 'Rb' ))
        assert_equal( 38, @e.atomic_number( 'Sr' ))
        assert_equal( 39, @e.atomic_number( 'Y'  ))
        assert_equal( 40, @e.atomic_number( 'Zr' ))
        assert_equal( 41, @e.atomic_number( 'Nb' ))
        assert_equal( 42, @e.atomic_number( 'Mo' ))
        assert_equal( 43, @e.atomic_number( 'Tc' ))
        assert_equal( 44, @e.atomic_number( 'Ru' ))
        assert_equal( 45, @e.atomic_number( 'Rh' ))
        assert_equal( 46, @e.atomic_number( 'Pd' ))
        assert_equal( 47, @e.atomic_number( 'Ag' ))
        assert_equal( 48, @e.atomic_number( 'Cd' ))
        assert_equal( 49, @e.atomic_number( 'In' ))
        assert_equal( 50, @e.atomic_number( 'Sn' ))
        assert_equal( 51, @e.atomic_number( 'Sb' ))
        assert_equal( 52, @e.atomic_number( 'Te' ))
        assert_equal( 53, @e.atomic_number( 'I'  ))
        assert_equal( 54, @e.atomic_number( 'Xe' ))
        assert_equal( 55, @e.atomic_number( 'Cs' ))
        assert_equal( 56, @e.atomic_number( 'Ba' ))
        assert_equal( 57, @e.atomic_number( 'La' ))
        assert_equal( 58, @e.atomic_number( 'Ce' ))
        assert_equal( 59, @e.atomic_number( 'Pr' ))
        assert_equal( 60, @e.atomic_number( 'Nd' ))
        assert_equal( 61, @e.atomic_number( 'Pm' ))
        assert_equal( 62, @e.atomic_number( 'Sm' ))
        assert_equal( 63, @e.atomic_number( 'Eu' ))
        assert_equal( 64, @e.atomic_number( 'Gd' ))
        assert_equal( 65, @e.atomic_number( 'Tb' ))
        assert_equal( 66, @e.atomic_number( 'Dy' ))
        assert_equal( 67, @e.atomic_number( 'Ho' ))
        assert_equal( 68, @e.atomic_number( 'Er' ))
        assert_equal( 69, @e.atomic_number( 'Tm' ))
        assert_equal( 70, @e.atomic_number( 'Yb' ))
        assert_equal( 71, @e.atomic_number( 'Lu' ))
        assert_equal( 72, @e.atomic_number( 'Hf' ))
        assert_equal( 73, @e.atomic_number( 'Ta' ))
        assert_equal( 74, @e.atomic_number( 'W'  ))
        assert_equal( 75, @e.atomic_number( 'Re' ))
        assert_equal( 76, @e.atomic_number( 'Os' ))
        assert_equal( 77, @e.atomic_number( 'Ir' ))
        assert_equal( 78, @e.atomic_number( 'Pt' ))
        assert_equal( 79, @e.atomic_number( 'Au' ))
        assert_equal( 80, @e.atomic_number( 'Hg' ))
        assert_equal( 81, @e.atomic_number( 'Tl' ))
        assert_equal( 82, @e.atomic_number( 'Pb' ))
        assert_equal( 83, @e.atomic_number( 'Bi' ))
        assert_equal( 84, @e.atomic_number( 'Po' ))
        assert_equal( 85, @e.atomic_number( 'At' ))
        assert_equal( 86, @e.atomic_number( 'Rn' ))
        assert_equal( 87, @e.atomic_number( 'Fr' ))
        assert_equal( 88, @e.atomic_number( 'Ra' ))
        assert_equal( 89, @e.atomic_number( 'Ac' ))
        assert_equal( 90, @e.atomic_number( 'Th' ))
        assert_equal( 91, @e.atomic_number( 'Pa' ))
        assert_equal( 92, @e.atomic_number( 'U'  ))
        assert_equal( 93, @e.atomic_number( 'Np' ))
        assert_equal( 94, @e.atomic_number( 'Pu' ))
        assert_equal( 95, @e.atomic_number( 'Am' ))
        assert_equal( 96, @e.atomic_number( 'Cm' ))
        assert_equal( 97, @e.atomic_number( 'Bk' ))
        assert_equal( 98, @e.atomic_number( 'Cf' ))
        assert_equal( 99, @e.atomic_number( 'Es' ))
        assert_equal(100, @e.atomic_number( 'Fm' ))
        assert_equal(101, @e.atomic_number( 'Md' ))
        assert_equal(102, @e.atomic_number( 'No' ))
        assert_equal(103, @e.atomic_number( 'Lr' ))

        assert_raise(CrystalCell::Element::NotExistError){ @e.atomic_number( 10 )}
        assert_raise(CrystalCell::Element::NotExistError){ @e.atomic_number( 104 )}
        assert_raise(CrystalCell::Element::NotExistError){ @e.atomic_number( 'A' )}
        assert_raise(CrystalCell::Element::NotExistError){ @e.atomic_number( nil )}
    end

    def test_symbol
        assert_equal('H' , @e.symbol(     1 ))
        assert_equal('He', @e.symbol(     2 ))
        assert_equal('Li', @e.symbol(     3 ))
        assert_equal('Be', @e.symbol(     4 ))
        assert_equal('B' , @e.symbol(     5 ))
        assert_equal('C' , @e.symbol(     6 ))
        assert_equal('N' , @e.symbol(     7 ))
        assert_equal('O' , @e.symbol(     8 ))
        assert_equal('F' , @e.symbol(     9 ))
        assert_equal('Ne', @e.symbol(    10 ))
        assert_equal('Na', @e.symbol(    11 ))
        assert_equal('Mg', @e.symbol(    12 ))
        assert_equal('Al', @e.symbol(    13 ))
        assert_equal('Si', @e.symbol(    14 ))
        assert_equal('P' , @e.symbol(    15 ))
        assert_equal('S' , @e.symbol(    16 ))
        assert_equal('Cl', @e.symbol(    17 ))
        assert_equal('Ar', @e.symbol(    18 ))
        assert_equal('K' , @e.symbol(    19 ))
        assert_equal('Ca', @e.symbol(    20 ))
        assert_equal('Sc', @e.symbol(    21 ))
        assert_equal('Ti', @e.symbol(    22 ))
        assert_equal('V' , @e.symbol(    23 ))
        assert_equal('Cr', @e.symbol(    24 ))
        assert_equal('Mn', @e.symbol(    25 ))
        assert_equal('Fe', @e.symbol(    26 ))
        assert_equal('Co', @e.symbol(    27 ))
        assert_equal('Ni', @e.symbol(    28 ))
        assert_equal('Cu', @e.symbol(    29 ))
        assert_equal('Zn', @e.symbol(    30 ))
        assert_equal('Ga', @e.symbol(    31 ))
        assert_equal('Ge', @e.symbol(    32 ))
        assert_equal('As', @e.symbol(    33 ))
        assert_equal('Se', @e.symbol(    34 ))
        assert_equal('Br', @e.symbol(    35 ))
        assert_equal('Kr', @e.symbol(    36 ))
        assert_equal('Rb', @e.symbol(    37 ))
        assert_equal('Sr', @e.symbol(    38 ))
        assert_equal('Y' , @e.symbol(    39 ))
        assert_equal('Zr', @e.symbol(    40 ))
        assert_equal('Nb', @e.symbol(    41 ))
        assert_equal('Mo', @e.symbol(    42 ))
        assert_equal('Tc', @e.symbol(    43 ))
        assert_equal('Ru', @e.symbol(    44 ))
        assert_equal('Rh', @e.symbol(    45 ))
        assert_equal('Pd', @e.symbol(    46 ))
        assert_equal('Ag', @e.symbol(    47 ))
        assert_equal('Cd', @e.symbol(    48 ))
        assert_equal('In', @e.symbol(    49 ))
        assert_equal('Sn', @e.symbol(    50 ))
        assert_equal('Sb', @e.symbol(    51 ))
        assert_equal('Te', @e.symbol(    52 ))
        assert_equal('I' , @e.symbol(    53 ))
        assert_equal('Xe', @e.symbol(    54 ))
        assert_equal('Cs', @e.symbol(    55 ))
        assert_equal('Ba', @e.symbol(    56 ))
        assert_equal('La', @e.symbol(    57 ))
        assert_equal('Ce', @e.symbol(    58 ))
        assert_equal('Pr', @e.symbol(    59 ))
        assert_equal('Nd', @e.symbol(    60 ))
        assert_equal('Pm', @e.symbol(    61 ))
        assert_equal('Sm', @e.symbol(    62 ))
        assert_equal('Eu', @e.symbol(    63 ))
        assert_equal('Gd', @e.symbol(    64 ))
        assert_equal('Tb', @e.symbol(    65 ))
        assert_equal('Dy', @e.symbol(    66 ))
        assert_equal('Ho', @e.symbol(    67 ))
        assert_equal('Er', @e.symbol(    68 ))
        assert_equal('Tm', @e.symbol(    69 ))
        assert_equal('Yb', @e.symbol(    70 ))
        assert_equal('Lu', @e.symbol(    71 ))
        assert_equal('Hf', @e.symbol(    72 ))
        assert_equal('Ta', @e.symbol(    73 ))
        assert_equal('W' , @e.symbol(    74 ))
        assert_equal('Re', @e.symbol(    75 ))
        assert_equal('Os', @e.symbol(    76 ))
        assert_equal('Ir', @e.symbol(    77 ))
        assert_equal('Pt', @e.symbol(    78 ))
        assert_equal('Au', @e.symbol(    79 ))
        assert_equal('Hg', @e.symbol(    80 ))
        assert_equal('Tl', @e.symbol(    81 ))
        assert_equal('Pb', @e.symbol(    82 ))
        assert_equal('Bi', @e.symbol(    83 ))
        assert_equal('Po', @e.symbol(    84 ))
        assert_equal('At', @e.symbol(    85 ))
        assert_equal('Rn', @e.symbol(    86 ))
        assert_equal('Fr', @e.symbol(    87 ))
        assert_equal('Ra', @e.symbol(    88 ))
        assert_equal('Ac', @e.symbol(    89 ))
        assert_equal('Th', @e.symbol(    90 ))
        assert_equal('Pa', @e.symbol(    91 ))
        assert_equal('U' , @e.symbol(    92 ))
        assert_equal('Np', @e.symbol(    93 ))
        assert_equal('Pu', @e.symbol(    94 ))
        assert_equal('Am', @e.symbol(    95 ))
        assert_equal('Cm', @e.symbol(    96 ))
        assert_equal('Bk', @e.symbol(    97 ))
        assert_equal('Cf', @e.symbol(    98 ))
        assert_equal('Es', @e.symbol(    99 ))
        assert_equal('Fm', @e.symbol( 100 ))
        assert_equal('Md', @e.symbol( 101 ))
        assert_equal('No', @e.symbol( 102 ))
        assert_equal('Lr', @e.symbol( 103 ))

        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( 'H'  )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( 'Na' )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( nil  )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( 'A'  )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( -1   )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol(  0   )}
        assert_raise(CrystalCell::Element::NotExistError){@e.symbol( 104  )}
    end

    def test_include?
        assert_equal(true, @e.include?( 'H'  ))
        assert_equal(true, @e.include?( 'He' ))
        assert_equal(true, @e.include?( 'Li' ))
        assert_equal(true, @e.include?( 'Be' ))
        assert_equal(true, @e.include?( 'B'  ))
        assert_equal(true, @e.include?( 'C'  ))
        assert_equal(true, @e.include?( 'N'  ))
        assert_equal(true, @e.include?( 'O'  ))
        assert_equal(true, @e.include?( 'F'  ))
        assert_equal(true, @e.include?( 'Ne' ))
        assert_equal(true, @e.include?( 'Na' ))
        assert_equal(true, @e.include?( 'Mg' ))
        assert_equal(true, @e.include?( 'Al' ))
        assert_equal(true, @e.include?( 'Si' ))
        assert_equal(true, @e.include?( 'P'  ))
        assert_equal(true, @e.include?( 'S'  ))
        assert_equal(true, @e.include?( 'Cl' ))
        assert_equal(true, @e.include?( 'Ar' ))
        assert_equal(true, @e.include?( 'K'  ))
        assert_equal(true, @e.include?( 'Ca' ))
        assert_equal(true, @e.include?( 'Sc' ))
        assert_equal(true, @e.include?( 'Ti' ))
        assert_equal(true, @e.include?( 'V'  ))
        assert_equal(true, @e.include?( 'Cr' ))
        assert_equal(true, @e.include?( 'Mn' ))
        assert_equal(true, @e.include?( 'Fe' ))
        assert_equal(true, @e.include?( 'Co' ))
        assert_equal(true, @e.include?( 'Ni' ))
        assert_equal(true, @e.include?( 'Cu' ))
        assert_equal(true, @e.include?( 'Zn' ))
        assert_equal(true, @e.include?( 'Ga' ))
        assert_equal(true, @e.include?( 'Ge' ))
        assert_equal(true, @e.include?( 'As' ))
        assert_equal(true, @e.include?( 'Se' ))
        assert_equal(true, @e.include?( 'Br' ))
        assert_equal(true, @e.include?( 'Kr' ))
        assert_equal(true, @e.include?( 'Rb' ))
        assert_equal(true, @e.include?( 'Sr' ))
        assert_equal(true, @e.include?( 'Y'  ))
        assert_equal(true, @e.include?( 'Zr' ))
        assert_equal(true, @e.include?( 'Nb' ))
        assert_equal(true, @e.include?( 'Mo' ))
        assert_equal(true, @e.include?( 'Tc' ))
        assert_equal(true, @e.include?( 'Ru' ))
        assert_equal(true, @e.include?( 'Rh' ))
        assert_equal(true, @e.include?( 'Pd' ))
        assert_equal(true, @e.include?( 'Ag' ))
        assert_equal(true, @e.include?( 'Cd' ))
        assert_equal(true, @e.include?( 'In' ))
        assert_equal(true, @e.include?( 'Sn' ))
        assert_equal(true, @e.include?( 'Sb' ))
        assert_equal(true, @e.include?( 'Te' ))
        assert_equal(true, @e.include?( 'I'  ))
        assert_equal(true, @e.include?( 'Xe' ))
        assert_equal(true, @e.include?( 'Cs' ))
        assert_equal(true, @e.include?( 'Ba' ))
        assert_equal(true, @e.include?( 'La' ))
        assert_equal(true, @e.include?( 'Ce' ))
        assert_equal(true, @e.include?( 'Pr' ))
        assert_equal(true, @e.include?( 'Nd' ))
        assert_equal(true, @e.include?( 'Pm' ))
        assert_equal(true, @e.include?( 'Sm' ))
        assert_equal(true, @e.include?( 'Eu' ))
        assert_equal(true, @e.include?( 'Gd' ))
        assert_equal(true, @e.include?( 'Tb' ))
        assert_equal(true, @e.include?( 'Dy' ))
        assert_equal(true, @e.include?( 'Ho' ))
        assert_equal(true, @e.include?( 'Er' ))
        assert_equal(true, @e.include?( 'Tm' ))
        assert_equal(true, @e.include?( 'Yb' ))
        assert_equal(true, @e.include?( 'Lu' ))
        assert_equal(true, @e.include?( 'Hf' ))
        assert_equal(true, @e.include?( 'Ta' ))
        assert_equal(true, @e.include?( 'W'  ))
        assert_equal(true, @e.include?( 'Re' ))
        assert_equal(true, @e.include?( 'Os' ))
        assert_equal(true, @e.include?( 'Ir' ))
        assert_equal(true, @e.include?( 'Pt' ))
        assert_equal(true, @e.include?( 'Au' ))
        assert_equal(true, @e.include?( 'Hg' ))
        assert_equal(true, @e.include?( 'Tl' ))
        assert_equal(true, @e.include?( 'Pb' ))
        assert_equal(true, @e.include?( 'Bi' ))
        assert_equal(true, @e.include?( 'Po' ))
        assert_equal(true, @e.include?( 'At' ))
        assert_equal(true, @e.include?( 'Rn' ))
        assert_equal(true, @e.include?( 'Fr' ))
        assert_equal(true, @e.include?( 'Ra' ))
        assert_equal(true, @e.include?( 'Ac' ))
        assert_equal(true, @e.include?( 'Th' ))
        assert_equal(true, @e.include?( 'Pa' ))
        assert_equal(true, @e.include?( 'U'  ))
        assert_equal(true, @e.include?( 'Np' ))
        assert_equal(true, @e.include?( 'Pu' ))
        assert_equal(true, @e.include?( 'Am' ))
        assert_equal(true, @e.include?( 'Cm' ))
        assert_equal(true, @e.include?( 'Bk' ))
        assert_equal(true, @e.include?( 'Cf' ))
        assert_equal(true, @e.include?( 'Es' ))
        assert_equal(true, @e.include?( 'Fm' ))
        assert_equal(true, @e.include?( 'Md' ))
        assert_equal(true, @e.include?( 'No' ))
        assert_equal(true, @e.include?( 'Lr' ))

        # assert_equal(true, @e.include?(       1 ))
        # assert_equal(true, @e.include?(       2 ))

        assert_equal(false, @e.include?( nil ))
        assert_equal(false, @e.include?( 'A' ))
        assert_equal(false, @e.include?( -1  ))
        assert_equal(false, @e.include?(  0  ))
        assert_equal(false, @e.include?( 104 ))
    end
end

